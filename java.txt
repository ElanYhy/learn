JAVA:


start()与run()介绍
	1.通过我们在启动线程的时候使用的start，为什么不用run呢？ 因为start()会新开一个线程来执行；而run只是一个普通想法，相当于当前线程来调用，不会启动新线程；

	2.start()只能调用一次，run()可以调用多次
	
	
比较一下ArrayList和LinkedList：
	1.ArrayList是基于数组，LinkedList基于链表实现。
	2.对于随机访问get和set，ArrayList觉得优于LinkedList，因为LinkedList要移动指针。
	3.对于新增和删除操作add和remove，LinedList比较占优势，因为ArrayList要移动数据。
	4.查找操作indexOf,lastIndexOf,contains等，两者差不多。
	这里只是理论上分析，事实上也不一定，比如ArrayList在末尾插入和删除数据就不设计到数据移动，不过还是
	有这么个建议：随机访问比较多的话一定要用ArrayList而不是LinkedList，如果需要频繁的插入和删除应该
	考虑用LinkedList来提高性能。
	
	
JSON是一种基于文本的数据交换方式（不支持跨域），而JSONP是一种非官方跨域数据交互协议。

Base64编码？
	为什么会有Base64编码呢？
		因为有些网络传送渠道并不支持所有的字节，例如传统的邮件只支持可见字符的传送，像ASCII码的控制字符就 不能通过邮件传送。
		这样用途就受到了很大的限制，比如图片二进制流的每个字节不可能全部是可见字符，所以就传送不了。
		最好的方法就是在不改变传统协议的情 况下，做一种扩展方案来支持二进制文件的传送。把不可打印的字符也能用可打印字符来表示，问题就解决了。
		Base64编码应运而生，Base64就是一种 基于64个可打印字符来表示二进制数据的表示方法。
	
	InputStream转Base64？
		1、获取输入流，直接调用方法
		引入

		import org.apache.commons.io.IOUtils;
		import java.util.Base64;

		InputStream resourceAsStream = processService.resourceRead(id,type);
		byte[] bytes = IOUtils.toByteArray(resourceAsStream);
		String encoded = Base64.getEncoder().encodeToString(bytes);
		
		2、前端显示
		HTML中使用：<img src="data:image/png;base64,..." />
	--------------------- 
	作者：killnm 
	来源：CSDN 
	原文：https://blog.csdn.net/qq_36120342/article/details/86579485 
	版权声明：本文为博主原创文章，转载请附上博文链接！